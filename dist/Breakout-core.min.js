/*!
 * Breakout v0.3.2 - 2015-10-31

 * Copyright (c) 2011-2015 Jeff Hoefs <soundanalogous@gmail.com> 
 * Released under the MIT license. See LICENSE file for details.
 * http://breakoutjs.com
 */
var BO=BO||{},BREAKOUT=BREAKOUT||BO;BREAKOUT.VERSION="0.3.2",BO.enableDebugging=!1;var JSUTILS=JSUTILS||{};JSUTILS.namespace=function(a){var b,c=a.split("."),d=window;for(b=0;b<c.length;b+=1)"undefined"==typeof d[c[b]]&&(d[c[b]]={}),d=d[c[b]];return d},JSUTILS.inherit=function(a){function b(){}if(null===a)throw new TypeError;if(Object.create)return Object.create(a);var c=typeof a;if("object"!==c&&"function"!==c)throw new TypeError;return b.prototype=a,new b},Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a||window,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}),JSUTILS.namespace("JSUTILS.Event"),JSUTILS.Event=function(){var a;return a=function(a){this._type=a,this._target=null,this.name="Event"},a.prototype={constructor:a,get type(){return this._type},set type(a){this._type=a},get target(){return this._target},set target(a){this._target=a}},a.CONNECTED="connected",a.CHANGE="change",a.COMPLETE="complete",a}(),JSUTILS.namespace("JSUTILS.EventDispatcher"),JSUTILS.EventDispatcher=function(){var a;return a=function(a){"use strict";this._target=a||null,this._eventListeners={},this.name="EventDispatcher"},a.prototype={constructor:a,addEventListener:function(a,b){this._eventListeners[a]||(this._eventListeners[a]=[]),this._eventListeners[a].push(b)},removeEventListener:function(a,b){for(var c=0,d=this._eventListeners[a].length;d>c;c++)this._eventListeners[a][c]===b&&this._eventListeners[a].splice(c,1)},hasEventListener:function(a){return this._eventListeners[a]&&this._eventListeners[a].length>0?!0:!1},dispatchEvent:function(a,b){a.target=this._target;var c=!1;for(var d in b)b.hasOwnProperty(d)&&(a[d.toString()]=b[d]);if(this.hasEventListener(a.type))for(var e=0,f=this._eventListeners[a.type].length;f>e;e++)try{this._eventListeners[a.type][e].call(this,a),c=!0}catch(g){console.log("error: Error calling event handler. "+g)}return c}},a}(),JSUTILS.namespace("BO.IOBoardEvent"),BO.IOBoardEvent=function(){var a,b=JSUTILS.Event;return a=function(a){this.name="IOBoardEvent",b.call(this,a)},a.ANALOG_DATA="analogData",a.DIGITAL_DATA="digitalData",a.FIRMWARE_VERSION="firmwareVersion",a.FIRMWARE_NAME="firmwareName",a.STRING_MESSAGE="stringMessage",a.SYSEX_MESSAGE="sysexMessage",a.PIN_STATE_RESPONSE="pinStateResponse",a.READY="ioBoardReady",a.CONNECTED="ioBoardConnected",a.DISCONNECTED="ioBoardDisonnected",a.prototype=JSUTILS.inherit(b.prototype),a.prototype.constructor=a,a}(),JSUTILS.namespace("BO.SerialEvent"),BO.SerialEvent=function(){var a,b=JSUTILS.Event;return a=function(a){this.name="SerialEvent",b.call(this,a)},a.DATA="data",a.prototype=JSUTILS.inherit(b.prototype),a.prototype.constructor=a,a}(),JSUTILS.namespace("BO.WSocketEvent"),BO.WSocketEvent=function(){var a,b=JSUTILS.Event;return a=function(a){this.name="WSocketEvent",b.call(this,a)},a.CONNECTED="webSocketConnected",a.MESSAGE="webSocketMessage",a.CLOSE="webSocketClosed",a.prototype=JSUTILS.inherit(b.prototype),a.prototype.constructor=a,a}(),JSUTILS.namespace("BO.WSocketWrapper"),BO.WSocketWrapper=function(){"use strict";var a,b=JSUTILS.EventDispatcher,c=BO.WSocketEvent,d={CONNECTING:0,OPEN:1,CLOSING:2,CLOSED:3};return a=function(a,c,d){this.name="WSocketWrapper",b.call(this,this),this._host=a,this._port=c,this._protocol=d||"default-protocol",this._socket=null,this._readyState=null,this.init(this)},a.prototype=JSUTILS.inherit(b.prototype),a.prototype.constructor=a,a.prototype.init=function(a){if("undefined"!=typeof io){a._socket=io.connect("http://"+a._host+":"+a._port);try{a._socket.on("connect",function(){a._socket.socket.options.reconnect=!1,a._readyState=d.OPEN,a.dispatchEvent(new c(c.CONNECTED)),a._socket.on("message",function(b){a.dispatchEvent(new c(c.MESSAGE),{message:b})})})}catch(b){console.log("Error "+b)}}else try{if("MozWebSocket"in window)a._socket=new MozWebSocket("ws://"+a._host+":"+a._port+"/websocket",a._protocol);else{if(!("WebSocket"in window))throw console.log("Websockets not supported by this browser"),new Error("Websockets not supported by this browser");a._socket=new WebSocket("ws://"+a._host+":"+a._port+"/websocket")}a._readyState=a._socket.readyState,a._socket.onopen=function(){a._readyState=a._socket.readyState,a.dispatchEvent(new c(c.CONNECTED)),a._socket.onmessage=function(b){a.dispatchEvent(new c(c.MESSAGE),{message:b.data})},a._socket.onclose=function(){a._readyState=a._socket.readyState,a.dispatchEvent(new c(c.CLOSE))}}}catch(b){console.log("Error "+b)}},a.prototype.send=function(a){this.sendString(a)},a.prototype.sendString=function(a){this.readyState===d.OPEN&&this._socket.send(a.toString())},Object.defineProperty(a.prototype,"readyState",{get:function(){return this._readyState}}),a}(),JSUTILS.namespace("BO.PinEvent"),BO.PinEvent=function(){var a,b=JSUTILS.Event;return a=function(a){this.name="PinEvent",b.call(this,a)},a.CHANGE="pinChange",a.RISING_EDGE="risingEdge",a.FALLING_EDGE="fallingEdge",a.prototype=JSUTILS.inherit(b.prototype),a.prototype.constructor=a,a}(),JSUTILS.namespace("BO.Pin"),BO.Pin=function(){"use strict";var a,b=JSUTILS.EventDispatcher,c=BO.PinEvent;return a=function(a,c){this.name="Pin",this._type=c,this._capabilities={},this._number=a,this._analogNumber=void 0,this._analogWriteResolution=255,this._analogReadResolution=1023,this._value=0,this._lastValue=-1,this._preFilterValue=0,this._average=0,this._minimum=Math.pow(2,16),this._maximum=0,this._sum=0,this._numSamples=0,this._filters=null,this._generator=null,this._state=void 0,this._autoSetValueCallback=this.autoSetValue.bind(this),this._evtDispatcher=new b(this)},a.prototype={constructor:a,setAnalogNumber:function(a){this._analogNumber=a},get analogNumber(){return this._analogNumber},get number(){return this._number},setAnalogWriteResolution:function(a){this._analogWriteResolution=a},setAnalogReadResolution:function(a){this._analogReadResolution=a},setState:function(b){this._type===a.PWM&&(b/=this.analogWriteResolution),this._state=b},get analogWriteResolution(){return this._analogWriteResolution},get analogReadResolution(){return this._analogReadResolution},get average(){return this._average},get minimum(){return this._minimum},get maximum(){return this._maximum},get state(){return this._state},get value(){return this._value},set value(a){this._lastValue=this._value,this._preFilterValue=a,this._value=this.applyFilters(a),this.calculateMinMaxAndMean(this._value),this.detectChange(this._lastValue,this._value)},get lastValue(){return this._lastValue},get preFilterValue(){return this._preFilterValue},get filters(){return this._filters},set filters(a){this._filters=a},get generator(){return this._generator},getType:function(){return this._type},setType:function(b){b>=0&&b<a.TOTAL_PIN_MODES&&(this._type=b)},getCapabilities:function(){return this._capabilities},setCapabilities:function(b){this._capabilities=b;var c=this._capabilities[a.PWM],d=this._capabilities[a.AIN];c&&this.setAnalogWriteResolution(Math.pow(2,c)-1),d&&this.setAnalogReadResolution(Math.pow(2,d)-1)},detectChange:function(a,b){a!==b&&(this.dispatchEvent(new c(c.CHANGE)),0>=a&&0!==b?this.dispatchEvent(new c(c.RISING_EDGE)):0!==a&&0>=b&&this.dispatchEvent(new c(c.FALLING_EDGE)))},clearWeight:function(){this._sum=this._average,this._numSamples=1},calculateMinMaxAndMean:function(a){var b=Number.MAX_VALUE;this._minimum=Math.min(a,this._minimum),this._maximum=Math.max(a,this._maximum),this._sum+=a,this._average=this._sum/++this._numSamples,this._numSamples>=b&&this.clearWeight()},clear:function(){this._minimum=this._maximum=this._average=this._lastValue=this._preFilterValue,this.clearWeight()},addFilter:function(a){null!==a&&(null===this._filters&&(this._filters=[]),this._filters.push(a))},removeFilter:function(a){var b;this._filters.length<1||(b=this._filters.indexOf(a),-1!==b&&this._filters.splice(b,1))},addGenerator:function(a){this.removeGenerator(),this._generator=a,this._generator.addEventListener("update",this._autoSetValueCallback)},removeGenerator:function(){null!==this._generator&&this._generator.removeEventListener("update",this._autoSetValueCallback),this._generator=null},removeAllFilters:function(){this._filters=null},autoSetValue:function(){var a=this._generator.value;this.value=a},applyFilters:function(a){var b;if(null===this._filters)return a;b=a;for(var c=this._filters.length,d=0;c>d;d++)b=this._filters[d].processSample(b);return b},addEventListener:function(a,b){this._evtDispatcher.addEventListener(a,b)},removeEventListener:function(a,b){this._evtDispatcher.removeEventListener(a,b)},hasEventListener:function(a){return this._evtDispatcher.hasEventListener(a)},dispatchEvent:function(a,b){return this._evtDispatcher.dispatchEvent(a,b)}},a.HIGH=1,a.LOW=0,a.ON=1,a.OFF=0,a.DIN=0,a.DOUT=1,a.AIN=2,a.AOUT=3,a.PWM=3,a.SERVO=4,a.SHIFT=5,a.I2C=6,a.ONEWIRE=7,a.STEPPER=8,a.ENCODER=9,a.SERIAL=10,a.INPUT_PULLUP=11,a.TOTAL_PIN_MODES=12,a}(),JSUTILS.namespace("BO.PhysicalInputBase"),BO.PhysicalInputBase=function(){var a,b=JSUTILS.EventDispatcher;return a=function(){this.name="PhysicalInputBase",this._evtDispatcher=new b(this)},a.prototype={constructor:a,addEventListener:function(a,b){this._evtDispatcher.addEventListener(a,b)},removeEventListener:function(a,b){this._evtDispatcher.removeEventListener(a,b)},hasEventListener:function(a){return this._evtDispatcher.hasEventListener(a)},dispatchEvent:function(a,b){return this._evtDispatcher.dispatchEvent(a,b)}},a}(),JSUTILS.namespace("BO.I2CBase"),BO.I2CBase=function(){"use strict";var a,b=BO.Pin,c=JSUTILS.EventDispatcher,d=BO.IOBoardEvent;return a=function(e,f,g){if(void 0!==e){this.name="I2CBase",this.board=e;var h=g||0,i=255&h,j=255&h>>7;this._address=f,this._evtDispatcher=new c(this);var k=e.getI2cPins();if(2!==k.length)return console.log("Error, this board does not support i2c"),void 0;e.getPin(k[0]).getType()!==b.I2C&&(e.getPin(k[0]).setType(b.I2C),e.getPin(k[1]).setType(b.I2C)),e.addEventListener(d.SYSEX_MESSAGE,this.onSysExMessage.bind(this)),e.sendSysex(a.I2C_CONFIG,[i,j])}},a.prototype={constructor:a,get address(){return this._address},onSysExMessage:function(b){var c=b.message,d=this.board.getValueFromTwo7bitBytes(c[1],c[2]),e=[];if(c[0]==a.I2C_REPLY&&d==this._address){for(var f=3,g=c.length;g>f;f+=2)e.push(this.board.getValueFromTwo7bitBytes(c[f],c[f+1]));this.handleI2C(e)}},sendI2CRequest:function(b){var c=[],d=b[1],e=b[0];c[0]=d,c[1]=e<<3;for(var f=2,g=b.length;g>f;f++)c.push(127&b[f]),c.push(127&b[f]>>7);this.board.sendSysex(a.I2C_REQUEST,c)},update:function(){},handleI2C:function(){},addEventListener:function(a,b){this._evtDispatcher.addEventListener(a,b)},removeEventListener:function(a,b){this._evtDispatcher.removeEventListener(a,b)},hasEventListener:function(a){return this._evtDispatcher.hasEventListener(a)},dispatchEvent:function(a,b){return this._evtDispatcher.dispatchEvent(a,b)}},a.I2C_REQUEST=118,a.I2C_REPLY=119,a.I2C_CONFIG=120,a.WRITE=0,a.READ=1,a.READ_CONTINUOUS=2,a.STOP_READING=3,a}(),JSUTILS.namespace("BO.Serial"),BO.Serial=function(){"use strict";var a,b=16,c=32,d=48,e=64,f=80,g=96,h=112,i=0,j=1,k=JSUTILS.EventDispatcher,l=BO.IOBoardEvent,m=BO.SerialEvent;return a=function(a,c,d,e,f){if(void 0===a)return console.log("board undefined"),void 0;this.name="Serial",this.board=a,this.port=c,this.baud=d,this.txPin=f,this.rxPin=e,this._evtDispatcher=new k(this),a.addEventListener(l.SYSEX_MESSAGE,this.onSysExMessage.bind(this));var g=[b|this.port,127&d,127&d>>7,127&d>>14];e&&g.push(e),f&&g.push(f),a.sendSysex(SERIAL_MESSAGE,g)},a.prototype={constructor:a,onSysExMessage:function(a){var b,c=a.message;if(c[0]===SERIAL_MESSAGE&&c[1]===(e|this.port))for(var d=2,f=c.length;f>d;d+=2)b=this.board.getValueFromTwo7bitBytes(c[d],c[d+1]),this.dispatchEvent(new m(m.DATA),{data:b,portId:this.port})},write:function(a){var b=[];b.push(c|this.port);for(var d=0,e=a.length;e>d;d++)b.push(127&a[d]),b.push(127&a[d]>>7);b.length>0&&this.board.sendSysex(SERIAL_MESSAGE,b)},startReading:function(a){var b=[];"undefined"==typeof a&&(a=0),b.push(d|this.port),b.push(i),b.push(127&a),b.push(127&a>>7),this.board.sendSysex(SERIAL_MESSAGE,b)},stopReading:function(){this.board.sendSysex(SERIAL_MESSAGE,[d|this.port,j])},close:function(){this.board.sendSysex(SERIAL_MESSAGE,[f|this.port])},flush:function(){this.board.sendSysex(SERIAL_MESSAGE,[g|this.port])},listen:function(){this.port<8||this.board.sendSysex(SERIAL_MESSAGE,[h|this.port])},addEventListener:function(a,b){this._evtDispatcher.addEventListener(a,b)},removeEventListener:function(a,b){this._evtDispatcher.removeEventListener(a,b)},hasEventListener:function(a){return this._evtDispatcher.hasEventListener(a)},dispatchEvent:function(a,b){return this._evtDispatcher.dispatchEvent(a,b)}},a.HW_SERIAL0=0,a.HW_SERIAL1=1,a.HW_SERIAL2=2,a.HW_SERIAL3=3,a.SW_SERIAL0=8,a.SW_SERIAL1=9,a.SW_SERIAL2=16,a.SW_SERIAL3=17,a}(),JSUTILS.namespace("BO.IOBoard"),BO.IOBoard=function(){var a,b=144,c=192,d=208,e=224,f=244,g=245,h=249,i=255,j=240,k=247;ANALOG_MAPPING_QUERY=105,ANALOG_MAPPING_RESPONSE=106,CAPABILITY_QUERY=107,CAPABILITY_RESPONSE=108,PIN_STATE_QUERY=109,PIN_STATE_RESPONSE=110,EXTENDED_ANALOG=111,SERVO_CONFIG=112,STRING_DATA=113,SHIFT_DATA=117,I2C_REQUEST=118,I2C_REPLY=119,I2C_CONFIG=120,REPORT_FIRMWARE=121,SAMPLING_INTERVAL=122,SYSEX_NON_REALTIME=126,SYSEX_REALTIME=127;var l=10,m=100,n="multiClient",o=BO.Pin,p=JSUTILS.EventDispatcher,q=BO.PinEvent,r=BO.IOBoardEvent;return a=function(a,b,c){"use strict";this.name="IOBoard",this._socket=null,this._inputDataBuffer=[],this._digitalPort=[],this._numPorts=0,this._numDigitialIOPins=0,this._analogPinMapping=[],this._digitalPinMapping=[],this._i2cPins=[],this._ioPins=[],this._totalPins=0,this._totalAnalogPins=0,this._samplingInterval=19,this._isReady=!1,this._firmwareName="",this._firmwareVersion=0,this._evtDispatcher=null,this._isMultiClientEnabled=!1,this._isConfigured=!1,this._capabilityQueryResponseReceived=!1,this._debugMode=BO.enableDebugging,this._numPinStateRequests=0,this._evtDispatcher=new p(this),this.initialVersionResultHandler=this.onInitialVersionResult.bind(this),this.sendOutHandler=this.sendOut.bind(this),this.socketConnectionHandler=this.onSocketConnection.bind(this),this.socketMessageHandler=this.onSocketMessage.bind(this),this.socketClosedHandler=this.onSocketClosed.bind(this),this._socket=new BO.WSocketWrapper(a,b,c),this._socket.addEventListener(BO.WSocketEvent.CONNECTED,this.socketConnectionHandler),this._socket.addEventListener(BO.WSocketEvent.MESSAGE,this.socketMessageHandler),this._socket.addEventListener(BO.WSocketEvent.CLOSE,this.socketClosedHandler)},a.prototype={constructor:a,onSocketConnection:function(){this.debug("debug: Socket Status: (open)"),this.dispatchEvent(new r(r.CONNECTED)),this.begin()},onSocketMessage:function(a){var b,c=a.message,d=[];if(c.length>1){d=c.split(","),b=d.length;for(var e=0;b>e;e++)this.parseInputMessage(d[e])}else this.parseInputMessage(c)},parseInputMessage:function(a){var b=/config/,c="";a.match(b)?(c=a.substr(a.indexOf(":")+2),this.processStatusMessage(c)):this.processInput(parseInt(a,10))},onSocketClosed:function(){this.debug("debug: Socket Status: "+this._socket.readyState+" (Closed)"),this.dispatchEvent(new r(r.DISCONNECTED))},begin:function(){this.addEventListener(r.FIRMWARE_NAME,this.initialVersionResultHandler),this.reportFirmware()},onInitialVersionResult:function(a){var b=10*a.version,c=a.name,d=this;if(this.removeEventListener(r.FIRMWARE_NAME,this.initialVersionResultHandler),this.debug("debug: Firmware name = "+c+", Firmware version = "+a.version),b>=23)this._isMultiClientEnabled?(this.queryCapabilities(),this.checkForQueryResponse()):(this.systemReset(),setTimeout(function(){d.queryCapabilities(),d.checkForQueryResponse()},200));else{var e="error: You must upload StandardFirmata version 2.3 or greater from Arduino version 1.0 or higher";console.log(e)}},checkForQueryResponse:function(){var a=this;setTimeout(function(){a._capabilityQueryResponseReceived===!1&&a.startup()},200)},processStatusMessage:function(a){a===n&&(this.debug("debug: Multi-client mode enabled"),this._isMultiClientEnabled=!0)},processInput:function(a){var b;this._inputDataBuffer.push(a),b=this._inputDataBuffer.length,this._inputDataBuffer[0]>=128&&this._inputDataBuffer[0]!=j?3===b&&(this.processMultiByteCommand(this._inputDataBuffer),this._inputDataBuffer=[]):this._inputDataBuffer[0]===j&&this._inputDataBuffer[b-1]===k?(this.processSysexCommand(this._inputDataBuffer),this._inputDataBuffer=[]):a>=128&&this._inputDataBuffer[0]<128&&(console.log("warning: Malformed input data... resetting buffer"),this._inputDataBuffer=[],a!==k&&this._inputDataBuffer.push(a))},processMultiByteCommand:function(a){var c,d=a[0];switch(240>d&&(d=240&d,c=15&a[0]),d){case b:this.processDigitalMessage(c,a[1],a[2]);break;case h:this._firmwareVersion=a[1]+a[2]/10,this.dispatchEvent(new r(r.FIRMWARE_VERSION),{version:this._firmwareVersion});break;case e:this.processAnalogMessage(c,a[1],a[2])}},processDigitalMessage:function(a,b,c){var d,e=8*a,f=e+8,g=b|c<<7,h={};f>=this._totalPins&&(f=this._totalPins);for(var i=0,j=e;f>j;j++){if(h=this.getDigitalPin(j),void 0===h)return;(h.getType()===o.DIN||h.getType()===o.INPUT_PULLUP)&&(d=1&g>>i,d!=h.value&&(h.value=d,this.dispatchEvent(new r(r.DIGITAL_DATA),{pin:h}))),i++}},processAnalogMessage:function(a,b,c){var d=this.getAnalogPin(a);void 0!==d&&(d.value=this.getValueFromTwo7bitBytes(b,c)/d.analogReadResolution,d.value!=d.lastValue&&this.dispatchEvent(new r(r.ANALOG_DATA),{pin:d}))},processSysexCommand:function(a){a.shift(),a.pop();var b=a[0];switch(b){case REPORT_FIRMWARE:this.processQueryFirmwareResult(a);break;case STRING_DATA:this.processSysExString(a);break;case CAPABILITY_RESPONSE:this.processCapabilitiesResponse(a);break;case PIN_STATE_RESPONSE:this.processPinStateResponse(a);break;case ANALOG_MAPPING_RESPONSE:this.processAnalogMappingResponse(a);break;default:this.dispatchEvent(new r(r.SYSEX_MESSAGE),{message:a})}},processQueryFirmwareResult:function(a){for(var b,c=3,d=a.length;d>c;c+=2)b=a[c],b+=a[c+1],this._firmwareName+=String.fromCharCode(b);this._firmwareVersion=a[1]+a[2]/10,this.dispatchEvent(new r(r.FIRMWARE_NAME),{name:this._firmwareName,version:this._firmwareVersion})},processSysExString:function(a){for(var b,c="",d=a.length,e=1;d>e;e+=2)b=a[e],b+=a[e+1],c+=String.fromCharCode(b);this.dispatchEvent(new r(r.STRING_MESSAGE),{message:c})},processCapabilitiesResponse:function(a){if(!this._isConfigured){var b,c,d={},e=1,f=0,g=0,h=a.length;for(this._numDigitialIOPins=0,this._capabilityQueryResponseReceived=!0;h>=e;)127==a[e]?(this._digitalPinMapping[f]=f,b=void 0,d[o.DOUT]&&(b=o.DOUT),d[o.AIN]&&(b=o.AIN,this._analogPinMapping[g++]=f),c=new o(f,b),c.setCapabilities(d),this.managePinListener(c),this._ioPins[f]=c,c.getCapabilities()[o.I2C]&&this._i2cPins.push(c.number),(d[o.DOUT]||d[o.DIN])&&this._numDigitialIOPins++,d={},f++,e++):(d[a[e]]=a[e+1],e+=2);this._numPorts=Math.ceil(this._numDigitialIOPins/8),this.debug("debug: Num ports = "+this._numPorts);for(var i=0;i<this._numPorts;i++)this._digitalPort[i]=0;this._totalPins=f,this._totalAnalogPins=g,this.debug("debug: Num pins = "+this._totalPins),this.queryAnalogMapping()}},processAnalogMappingResponse:function(a){if(!this._isConfigured){for(var b=a.length,c=1;b>c;c++)127!=a[c]&&(this._analogPinMapping[a[c]]=c-1,this.getPin(c-1).setAnalogNumber(a[c]));this._isMultiClientEnabled?this.startupInMultiClientMode():this.startup()}},startupInMultiClientMode:function(){for(var a=this.getPinCount(),b=0;a>b;b++)this.queryPinState(this.getDigitalPin(b));setTimeout(this.startup.bind(this),500),this._isConfigured=!0},startup:function(){this.debug("debug: IOBoard ready"),this._isReady=!0,this.enableDigitalPins(),this.dispatchEvent(new r(r.READY))},systemReset:function(){this.debug("debug: System reset"),this.send(i)},processPinStateResponse:function(a){if(!(this._numPinStateRequests<=0)){var b,c=a.length,d=a[1],e=a[2],f=this._ioPins[d];c>4?b=this.getValueFromTwo7bitBytes(a[3],a[4]):c>3&&(b=a[3]),f.getType()!=e&&(f.setType(e),this.managePinListener(f)),f.setState(b),this._numPinStateRequests--,this._numPinStateRequests<0&&(this._numPinStateRequests=0),this.dispatchEvent(new r(r.PIN_STATE_RESPONSE),{pin:f})}},toDec:function(a){a=a.substring(0,1);var b=a.charCodeAt(0);return b},sendOut:function(a){var b=a.target.getType(),c=a.target.number,d=a.target.value;switch(b){case o.DOUT:this.sendDigitalData(c,d);break;case o.AOUT:this.sendAnalogData(c,d);break;case o.SERVO:this.sendServoData(c,d)}},managePinListener:function(a){if(a.getType()==o.DOUT||a.getType()==o.AOUT||a.getType()==o.SERVO)a.hasEventListener(q.CHANGE)||a.addEventListener(q.CHANGE,this.sendOutHandler);else if(a.hasEventListener(q.CHANGE))try{a.removeEventListener(q.CHANGE,this.sendOutHandler)}catch(b){this.debug("debug: Caught pin removeEventListener exception")}},sendAnalogData:function(a,b){var c=this.getDigitalPin(a).analogWriteResolution;b*=c,b=0>b?0:b,b=b>c?c:b,a>15||b>Math.pow(2,14)?this.sendExtendedAnalogData(a,b):this.send([e|15&a,127&b,127&b>>7])},sendExtendedAnalogData:function(a,b){var c=[];if(b>Math.pow(2,16)){var d="error: Extended Analog values > 16 bits are not currently supported by StandardFirmata";throw console.log(d),d}c[0]=j,c[1]=EXTENDED_ANALOG,c[2]=a,c[3]=127&b,c[4]=127&b>>7,b>=Math.pow(2,14)&&(c[5]=127&b>>14),c.push(k),this.send(c)},sendDigitalData:function(a,b){var c=Math.floor(a/8);if(b==o.HIGH)this._digitalPort[c]|=b<<a%8;else{if(b!=o.LOW)return console.log("warning: Invalid value passed to sendDigital, value must be 0 or 1."),void 0;this._digitalPort[c]&=~(1<<a%8)}this.sendDigitalPort(c,this._digitalPort[c])},sendServoData:function(a,b){var c=this.getDigitalPin(a);c.getType()==o.SERVO&&c.lastValue!=b&&this.sendAnalogData(a,b)},queryCapabilities:function(){this.send([j,CAPABILITY_QUERY,k])},queryAnalogMapping:function(){this.send([j,ANALOG_MAPPING_QUERY,k])},setAnalogPinReporting:function(a,b){this.send([c|a,b]),this.getAnalogPin(a).setType(o.AIN)},debug:function(a){this._debugMode&&console.log(a)},get samplingInterval(){return this._samplingInterval},set samplingInterval(a){a>=l&&m>=a?(this._samplingInterval=a,this.send([j,SAMPLING_INTERVAL,127&a,127&a>>7,k])):console.log("warning: Sampling interval must be between "+l+" and "+m)},get isReady(){return this._isReady},getValueFromTwo7bitBytes:function(a,b){return b<<7|a},getSocket:function(){return this._socket},reportVersion:function(){this.send(h)},reportFirmware:function(){this.send([j,REPORT_FIRMWARE,k])},disableDigitalPins:function(){for(var a=0;a<this._numPorts;a++)this.sendDigitalPortReporting(a,o.OFF)},enableDigitalPins:function(){for(var a=0;a<this._numPorts;a++)this.sendDigitalPortReporting(a,o.ON)},sendDigitalPortReporting:function(a,b){this.send([d|a,b])},enableAnalogPin:function(a){this.setAnalogPinReporting(a,o.ON)},disableAnalogPin:function(a){this.setAnalogPinReporting(a,o.OFF)},setDigitalPinMode:function(a,b,c){this.getDigitalPin(a).setType(b),this.managePinListener(this.getDigitalPin(a)),c&&c===!0||this.send([f,a,b])},setDigitalPinValue:function(a,b){var c=Math.floor(a/8);b==o.HIGH?this._digitalPort[c]|=b<<a%8:b==o.LOW&&(this._digitalPort[c]&=~(1<<a%8)),this.send([g,a,b])},enablePullUp:function(a){this.setDigitalPinMode(a,o.INPUT_PULLUP)},getFirmwareName:function(){return this._firmwareName},getFirmwareVersion:function(){return this._firmwareVersion},getPinCapabilities:function(){var a,b,c,d,e=[],f={0:"input",1:"output",2:"analog",3:"pwm",4:"servo",5:"shift",6:"i2c",7:"onewire",8:"stepper",9:"encoder",10:"serial"};a=this._ioPins.length;for(var g=0;a>g;g++){b={},c=this._ioPins[g].getCapabilities(),d=!1;for(var h in c)c.hasOwnProperty(h)&&(d=!0,h>=0&&(b[f[h]]=this._ioPins[g].getCapabilities()[h]));e[g]=d?b:{"not available":"0"}}return e},queryPinState:function(a){var b=a.number;this.send([j,PIN_STATE_QUERY,b,k]),this._numPinStateRequests++},sendDigitalPort:function(a,c){this.send([b|15&a,127&c,c>>7])},sendString:function(a){for(var b=[],c=0,d=a.length;d>c;c++)b.push(127&this.toDec(a[c])),b.push(127&this.toDec(a[c])>>7);this.sendSysex(STRING_DATA,b)},sendSysex:function(a,b){var c=[];c[0]=j,c[1]=a;for(var d=0,e=b.length;e>d;d++)c.push(b[d]);c.push(k),this.send(c)},sendServoAttach:function(a,b,c){var d,e=[];b=b||544,c=c||2400,e[0]=j,e[1]=SERVO_CONFIG,e[2]=a,e[3]=b%128,e[4]=b>>7,e[5]=c%128,e[6]=c>>7,e[7]=k,this.send(e),d=this.getDigitalPin(a),d.setType(o.SERVO),this.managePinListener(d)},getPin:function(a){return this._ioPins[a]},getAnalogPin:function(a){return this._ioPins[this._analogPinMapping[a]]},getDigitalPin:function(a){return this._ioPins[this._digitalPinMapping[a]]},getPins:function(){return this._ioPins},analogToDigital:function(a){return this.getAnalogPin(a).number},getPinCount:function(){return this._totalPins},getAnalogPinCount:function(){return this._totalAnalogPins},getI2cPins:function(){return this._i2cPins},reportCapabilities:function(){for(var a,b=this.getPinCapabilities(),c=b.length,d=0;c>d;d++){console.log("Pin "+d+":");for(var e in b[d])b[d].hasOwnProperty(e)&&(a=b[d][e],console.log("	"+e+" ("+a+(a>1?" bits)":" bit)")))}},send:function(a){this._socket.sendString(a)},close:function(){this._socket.close()},addEventListener:function(a,b){this._evtDispatcher.addEventListener(a,b)},removeEventListener:function(a,b){this._evtDispatcher.removeEventListener(a,b)},hasEventListener:function(a){return this._evtDispatcher.hasEventListener(a)},dispatchEvent:function(a,b){return this._evtDispatcher.dispatchEvent(a,b)}},a}();